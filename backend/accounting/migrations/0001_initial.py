# Generated by Django 4.2.7

from django.db import migrations, models
import django.core.validators
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_key', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('report', models.CharField(max_length=50)),
                ('class_name', models.CharField(db_column='Class', help_text='Account class (e.g., Assets, Liabilities, Equity)', max_length=50)),
                ('sub_class', models.CharField(db_column='SubClass', help_text='Account sub-class', max_length=50)),
                ('sub_class2', models.CharField(db_column='SubClass2', help_text='Secondary sub-class', max_length=50)),
                ('account', models.CharField(help_text='Account name', max_length=50)),
                ('sub_account', models.CharField(db_column='SubAccount', help_text='Sub-account name', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chart_of_accounts', to='accounting.company')),
            ],
            options={
                'verbose_name_plural': 'Chart of Accounts',
                'ordering': ['company', 'account_key'],
            },
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('territory_key', models.PositiveSmallIntegerField(help_text='Unique territory identifier within the company')),
                ('country', models.CharField(max_length=50)),
                ('region', models.CharField(max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='territories', to='accounting.company')),
            ],
            options={
                'verbose_name_plural': 'Territories',
                'ordering': ['company', 'country', 'region'],
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('year', models.SmallIntegerField()),
                ('quarter', models.CharField(help_text='Quarter designation (e.g., Q1, Q2, Q3, Q4)', max_length=50)),
                ('month', models.CharField(help_text='Month name or designation', max_length=50)),
                ('day', models.CharField(help_text='Day designation or name', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_entries', to='accounting.company')),
            ],
            options={
                'ordering': ['company', 'date'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('journal_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(help_text='Overall description of the journal entry', max_length=255)),
                ('reference_number', models.CharField(blank=True, help_text='Journal entry reference number', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(default='System', help_text='User or system that created this entry', max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='accounting.company')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='accounting.calendar')),
            ],
            options={
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-date__date', '-journal_id'],
            },
        ),
        migrations.CreateModel(
            name='GeneralLedger',
            fields=[
                ('entry_no', models.AutoField(db_column='EntryNo', primary_key=True, serialize=False)),
                ('details', models.CharField(help_text='Transaction description or details', max_length=255)),
                ('amount', models.DecimalField(decimal_places=4, help_text='Transaction amount with high precision for financial accuracy', max_digits=19)),
                ('transaction_type', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], help_text='Whether this entry is a debit or credit', max_length=10)),
                ('reference_number', models.CharField(blank=True, help_text='External reference number (invoice, receipt, etc.)', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(db_column='Account_key', on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='accounting.chartofaccounts')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='accounting.company')),
                ('date', models.ForeignKey(db_column='Date', on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='accounting.calendar')),
                ('territory', models.ForeignKey(blank=True, db_column='Territory_key', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ledger_entries', to='accounting.territory')),
            ],
            options={
                'ordering': ['-date__date', '-entry_no'],
            },
        ),
        migrations.AddConstraint(
            model_name='territory',
            constraint=models.UniqueConstraint(fields=('company', 'territory_key'), name='accounting_territory_company_territory_key_uniq'),
        ),
        migrations.AddConstraint(
            model_name='chartofaccounts',
            constraint=models.UniqueConstraint(fields=('company', 'account_key'), name='accounting_chartofaccounts_company_account_key_uniq'),
        ),
        migrations.AddConstraint(
            model_name='calendar',
            constraint=models.UniqueConstraint(fields=('company', 'date'), name='accounting_calendar_company_date_uniq'),
        ),
        migrations.AddIndex(
            model_name='generalledger',
            index=models.Index(fields=['company', 'date'], name='accounting_g_company_b8e5c8_idx'),
        ),
        migrations.AddIndex(
            model_name='generalledger',
            index=models.Index(fields=['account', 'date'], name='accounting_g_account_e8b7a1_idx'),
        ),
        migrations.AddIndex(
            model_name='generalledger',
            index=models.Index(fields=['territory', 'date'], name='accounting_g_territo_c5f2d4_idx'),
        ),
    ]